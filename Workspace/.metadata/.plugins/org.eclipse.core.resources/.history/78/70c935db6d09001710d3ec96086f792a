package ch.gmtech.ste.learning.html;
import static j2html.TagCreator.*;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import ch.gmtech.ste.learning.seminar.Seminar;
import j2html.tags.ContainerTag;

public class HtmlPage{
	
	public String header(){

		return html().with(
				head().with(
						title("Course Form"),
						meta().withCharset("UTF-8"),
						meta().withName("viewport"),
						meta().withContent("width=device-width, initial-scale=1"),
						link().withRel("stylesheet").withHref("https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css")
						)
				).render();
	}

	public String renderBody(Seminar seminar){
		
		return body().with(
				div().withId("Seminars").with(
						ul().with(li(seminar.course().name()))
					)
				)
				.render();
	}
	
	public String renderFormBody(){

		return body().with(
				div().withClass("container").with(
					div().withClass("row").with(
						div().withClass("col-md-6 col-md-offset-3").with(
							h1("Course Form").withClass("page-header text-center"),
								form().withId("courseForm").withClass("form-horizontal").withMethod("post").with(
		
									createInput("Name","text","courseName","name","Course Name"),
									createInput("Number","number","number","number","Number"),
									createInput("TotalSeats","number","seats","seats","TotalSeats"),
									createInput("Location","text","location","location","Location"),
									createInput("Description","text","description","description","Description"),
									createInput("StartDate","date","startdate","startdate","StartDate"),
									createSubmit(),
									script().withSrc("/js/jquery.min.js"),
									script().withSrc("/js/bootstrap.min.js")
								)
							)
						)
					)
				)
				.render()
				;
	}

	public String renderValidatedFormBody(HttpServletRequest req){
		
		Date startDate = null;
		String name = req.getParameter("name");
		Integer number = Integer.valueOf(req.getParameter("number"));
		Integer seats = Integer.valueOf(req.getParameter("seats"));
		String description = req.getParameter("description");
		String location = req.getParameter("location");
		try {
			startDate = new SimpleDateFormat("yyyy-MM-dd").parse(req.getParameter("startdate"));
		} catch (ParseException e) {
			throw new RuntimeException(e);
		}
		
		return body().with(
				div().withClass("container").with(
						div().withClass("row").with(
								div().withClass("col-md-6 col-md-offset-3").with(
										h1("Course Form").withClass("page-header text-center"),
										form().withId("courseForm").withClass("form-horizontal").withMethod("post").with(
												
												createValidationInput("","text","courseName","name","Course Name"),
												createValidationInput("","number","number","number","Number"),
												createValidationInput("","number","seats","seats","TotalSeats"),
												createValidationInput("","text","location","location","Location"),
												createValidationInput("","text","description","description","Description"),
												createValidationInput("".toString(),"date","startdate","startdate","StartDate"),
												createSubmit(),
												script().withSrc("/js/jquery.min.js"),
												script().withSrc("/js/bootstrap.min.js")
												)
										)
								)
						)
				)
				.render()
				;
	}

	private ContainerTag createSubmit() {
		return div().withClass("form-group").with( 
			div().withClass("col-sm-10 col-sm-offset-2").with(
					input()
					.withType("submit")
					.withClass("btn btn-primary")
			        .withId("submit")
			        .withValue("Send")
			)
		);
	}

	private ContainerTag createInput(String value, String type, String id, String name, String placeHolder ) {
		return div().withClass("form-group").with( 
			label(value).withClass("col-sm-2 control-label"),
			div().withClass("col-sm-10").with(
				input()
				.withType(type)
				.withClass("form-control")
		        .withId(id)
		        .withName(name)
		        .withPlaceholder(placeHolder)
		        .withValue(value)
			)
		);
	}

	private ContainerTag createValidationInput(String value, String type, String id, String name, String placeHolder ) {
		return div().withClass("form-group has-error has-feedback").with( 
				label(value).withClass("col-sm-2 control-label"),
				div().withClass("col-sm-10").with(
						input()
						.withType(type)
						.withClass("form-control")
						.withId(id)
						.withName(name)
						.withPlaceholder(placeHolder)
						.withValue(value),
						span().withId("idHelp").withClass("help-block").withText("Provide a valid name!"),
						span().withClass("glyphicon form-control-feedback glyphicon-remove"),
						span().withId("idHelp").withClass("sr-only").withText("(error)")
						
						)
				);
	}

}
